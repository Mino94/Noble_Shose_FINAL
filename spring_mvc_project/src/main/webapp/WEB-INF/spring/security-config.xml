<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:security="http://www.springframework.org/schema/security"
	xsi:schemaLocation="http://www.springframework.org/schema/security 
	http://www.springframework.org/schema/security/spring-security-4.1.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd">
	
	<!-- security 적용 안함 -->
	<security:http pattern="/css/**" security="none" />
    <security:http pattern="/img/**" security="none" />
    <security:http pattern="/js/**" security="none" />
    <security:http pattern="/uploads/**" security="none" />
    
	<security:http auto-config="true" use-expressions="true">
		
		<security:intercept-url pattern="/resources/**" access="permitAll"/>
		<!-- 로그인 세션을 가진 사용자만 접근 가능한 요청 주소 지정 -->
		<security:intercept-url pattern="/jsp/login/admin/**" access="hasRole('ROLE_ADMIN')" />
		<security:intercept-url pattern="jsp/login/login*.jsp" access="hasRole('ROLE_USER')" />
        
		  <!-- 세션 관리 -->
        <security:session-management invalid-session-url="/">
            <!-- 동일 ID의 세션 최대수가 한 개, 그 이상일 경우는 기존 세션 무효화 -->
            <security:concurrency-control max-sessions="1" error-if-maximum-exceeded="false" />
        </security:session-management>
        
		<!-- 사용자 지정 로그인폼 페이지 요청주소 및 로그인 성공시, 실패시 요청 주소 지정 -->
		<security:form-login 
				login-page="/login/login" 
				default-target-url="/login/userLoginSuccess"
				username-parameter="username" 
				password-parameter="password"
				authentication-failure-url="/login/userLoginFail" /> 

		<!-- 로그아웃 요청 주소 지정 -->                    
		<security:logout 
			invalidate-session="true" 
			logout-success-url="/index" 
			delete-cookies ="JSESSIONID,SPRING_SECURITY_REMEMBER_ME_COOKIE"  /> 
			
		<!-- enable csrf protection -->	
		<security:csrf disabled="true"/>
	</security:http>
	
	<security:authentication-manager>
		<security:authentication-provider>
			<!-- users-by-username-query: ID에 따른 비밀번호 일치여부 확인 -->
			<!-- authorities-by-username-query: 로그인에 성공한 사용자의 권한을 확인하여 접근 가능/불가 페이지를 구분해서 접근-->
			<security:jdbc-user-service 
				data-source-ref="dataSource"			
				users-by-username-query="SELECT memId AS username, memPassword AS password, 
				 memEnabled AS enabled FROM member WHERE memId=?"
				authorities-by-username-query="SELECT memId AS username, memAuthority AS autority
				FROM member WHERE memId=?" /> 
		</security:authentication-provider>
	</security:authentication-manager>
	
</beans>


